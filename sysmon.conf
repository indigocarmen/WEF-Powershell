
Panic Soft
#NoFreeOnExit TRUE

define ROOT     C:\Program Files (x86)\nxlog
define CERTDIR  %ROOT%\cert
define CONFDIR  %ROOT%\conf
define LOGDIR   %ROOT%\data
define LOGFILE  %LOGDIR%\nxlog.log
LogFile %LOGFILE%

Moduledir %ROOT%\modules
CacheDir  %ROOT%\data
Pidfile   %ROOT%\data\nxlog.pid
SpoolDir  %ROOT%\data

##Extension to send the message over the network via syslog
<Extension _syslog>
    Module      xm_syslog
</Extension>

##Include fileop while debugging, also enable in the output module below
<Extension fileop>
	Module xm_fileop
</Extension>

##Extension to format the message in JSON format
<Extension xm_json>
	Module xm_json
</Extension>

##Our output to our IDR event source we've created for this
<Output IDR>
	Module om_tcp
	##InsightIDR Collector IP Address
	Host   xxx.xxx.xxx.xxx
	##Port for our IDR event source
	Port   5140
	Exec   $raw_event = replace($raw_event, "\\r\\n", "");
	Exec   $raw_event = replace($raw_event, "\\t", "");
</Output>

##Our input (grabbing the logs from the event log we supply, and delete fields we don't care about)
<Input EventLog>
    Module      im_msvistalog
	<QueryXML>
		<QueryList>                 
			<Query Id="0">
				<Select Path="ForwardedEvents/source=sysmon">*</Select>
			</Query>
		</QueryList>
	</QueryXML>
	Exec delete($EventReceivedTime);
	Exec delete($Keywords);
	Exec delete($EventType);
	Exec delete($SeverityValue);
	Exec delete($Severity);
	Exec delete($Version);
	Exec delete($Task);
	Exec delete($OpcodeValue);
	Exec delete($RecordNumber);
	Exec delete($ProviderGuid);
	Exec delete($ActivityID);
	Exec delete($ProcessID);
	Exec delete($ThreadID);
	Exec delete($SourceModuleName);
	Exec delete($SourceModuleType);
	Exec $raw_event = to_json();
</Input>

##Send the logs to the IDR collector
<Route 1>
    Path       EventLog => IDR
</Route>
